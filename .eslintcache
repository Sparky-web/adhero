[{"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\index.tsx":"1","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\reportWebVitals.ts":"2","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\context\\NavigationContext.tsx":"3","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\App.tsx":"4","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\onBoard\\Info.tsx":"5","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\onBoard\\Select.tsx":"6","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\main\\ad\\Ad.tsx":"7","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\main\\owner\\Owner.tsx":"8","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\main\\ad\\CreateAd.tsx":"9","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\db.ts":"10","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\modals\\index.tsx":"11","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\redux\\index.ts":"12","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\redux\\selectGroupsSlice.ts":"13","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\redux\\getGroups.ts":"14","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\modals\\Filters.tsx":"15","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\modals\\Sort.tsx":"16"},{"size":700,"mtime":1612612963479,"results":"17","hashOfConfig":"18"},{"size":463,"mtime":1612680801060,"results":"19","hashOfConfig":"18"},{"size":2052,"mtime":1612683912929,"results":"20","hashOfConfig":"18"},{"size":1224,"mtime":1612683544937,"results":"21","hashOfConfig":"18"},{"size":1071,"mtime":1612680801141,"results":"22","hashOfConfig":"18"},{"size":1086,"mtime":1612680801111,"results":"23","hashOfConfig":"18"},{"size":1150,"mtime":1612680801156,"results":"24","hashOfConfig":"18"},{"size":298,"mtime":1612543778371,"results":"25","hashOfConfig":"18"},{"size":4401,"mtime":1612794669368,"results":"26","hashOfConfig":"18"},{"size":169,"mtime":1612680801075,"results":"27","hashOfConfig":"18"},{"size":610,"mtime":1612709358281,"results":"28","hashOfConfig":"18"},{"size":584,"mtime":1612680801083,"results":"29","hashOfConfig":"18"},{"size":3524,"mtime":1612719687608,"results":"30","hashOfConfig":"18"},{"size":1399,"mtime":1612792247834,"results":"31","hashOfConfig":"18"},{"size":3664,"mtime":1612839087251,"results":"32","hashOfConfig":"18"},{"size":2120,"mtime":1612719052391,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1v7tk0k",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\index.tsx",[],["69","70"],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\reportWebVitals.ts",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\context\\NavigationContext.tsx",["71"],"import React, {createContext, ReactNode, useEffect, useState} from 'react';\r\nimport {History, HistoryItem, Modal} from \"../types/app\";\r\n\r\nconst initialState = {\r\n    view: \"service\",\r\n    panel: \"service.loading\",\r\n    canGoBack: false,\r\n} as HistoryItem\r\n\r\nconst NavigationContext = createContext<{\r\n    history: History, state: HistoryItem, modal: Modal,\r\n    go: (item: HistoryItem) => any, back: () => any, openModal: (modal: Modal) => any\r\n}>({\r\n    history: [],\r\n    state: initialState,\r\n    go: (item) => {\r\n    },\r\n    back: () => {\r\n        return false\r\n    },\r\n    openModal: (modal) => {\r\n    },\r\n    modal: null\r\n});\r\n\r\nfunction NavigationProvider(props: { children: ReactNode }) {\r\n    const [history, setHistory] = useState<History>([])\r\n    const [state, setState] = useState<HistoryItem>(initialState)\r\n    const [modal, setModal] = useState<Modal>(null)\r\n\r\n    const go = (item: HistoryItem) => {\r\n        if (item.canGoBack) window.history.pushState(item, item.panel)\r\n        setHistory([...history, state])\r\n        setState(item)\r\n    }\r\n    const back = () => {\r\n        if (modal) {\r\n            setModal(null)\r\n            return true\r\n        } else if (history.slice(-1)[0].canGoBack) {\r\n            setState(history.slice(-1)[0])\r\n            setHistory(history.slice(0, -1))\r\n            return true\r\n        } else return false\r\n    }\r\n\r\n    const openModal = (modal: Modal) => {\r\n        if(modal) {\r\n            window.history.pushState(modal, modal)\r\n            setModal(modal)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            go({\r\n                canGoBack: true,\r\n                modal: \"\",\r\n                panel: \"onboard.info\",\r\n                view: \"onboard\"\r\n            })\r\n        }, 1000)\r\n    }, [])\r\n\r\n    window.onpopstate = back\r\n\r\n    return (\r\n        <NavigationContext.Provider value={{history, state, go, back, modal, openModal}}>\r\n            {props.children}\r\n        </NavigationContext.Provider>\r\n    );\r\n}\r\n\r\nexport {NavigationContext, NavigationProvider};","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\App.tsx",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\onBoard\\Info.tsx",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\onBoard\\Select.tsx",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\main\\ad\\Ad.tsx",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\main\\owner\\Owner.tsx",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\panels\\main\\ad\\CreateAd.tsx",["72","73"],"import React, {useContext, useEffect} from 'react';\r\nimport {Avatar, Button, Div, Group, PanelHeader, Placeholder, RichCell, Spinner} from \"@vkontakte/vkui\";\r\nimport {Title} from \"@vkontakte/vkui/dist\";\r\nimport {Icon16Chevron, Icon16ChevronLeft, Icon56InfoOutline} from \"@vkontakte/icons\";\r\nimport {NavigationContext} from \"../../../context/NavigationContext\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../redux\";\r\nimport selectGroupsSlice, {fetchGroups} from \"../../../redux/selectGroupsSlice\";\r\n\r\nfunction CreateAd() {\r\n    const {openModal} = useContext(NavigationContext)\r\n\r\n    const groups = useSelector((state: RootState) => state.selectGroups.groups)\r\n    const selectedGroups = useSelector((state: RootState) => state.selectGroups.selectedGroups)\r\n    const isLoading = useSelector((state: RootState) => state.selectGroups.isLoading)\r\n    const before = useSelector((state: RootState) => state.selectGroups.before)\r\n    const after = useSelector((state: RootState) => state.selectGroups.after)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchGroups(\"forward\"))\r\n        return function cleanup() {\r\n            dispatch(selectGroupsSlice.actions.clearGroups())\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!groups.length && after) {\r\n            dispatch(fetchGroups(\"forward\"))\r\n        }\r\n    }, [selectedGroups, groups, isLoading, after])\r\n\r\n    const selectedPrice = selectedGroups.length ? selectedGroups.map(el => el.price).reduce((acc, val) => acc + val) : 0\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <PanelHeader>Создание кампании</PanelHeader>\r\n            <Div>\r\n                <Title weight={\"regular\"} level={\"3\"}>\r\n                    1. Выберете группы\r\n                </Title>\r\n            </Div>\r\n\r\n            <Div style={{display: 'flex'}}>\r\n                <Button size=\"m\" stretched style={{marginRight: 8}}\r\n                        onClick={() => {\r\n                            openModal(\"filters\")\r\n                        }}\r\n                >Фильтры</Button>\r\n                <Button size=\"m\" stretched mode=\"secondary\" onClick={() => openModal(\"sort\")}>Сортировка</Button>\r\n            </Div>\r\n\r\n            {!groups.length && isLoading && <Spinner size={\"large\"} className={\"mt-3\"}/>}\r\n\r\n            <Group className={[\"ad-groups\", isLoading ? \"ad-groups__loading\" : \"\"].join(\" \")}>\r\n                {groups.map(el => (\r\n                    <RichCell\r\n                        key={el.id}\r\n                        disabled\r\n                        multiline\r\n                        before={<Avatar size={48} src={el.image}/>}\r\n                        text={`Подписчиков: ${el.subscribers}`}\r\n                        after={`+ ${el.price} ₽`}\r\n                        actions={<React.Fragment>\r\n                            <Button\r\n                                onClick={() => dispatch(selectGroupsSlice.actions.selectGroup(el))}>Добавить</Button>\r\n                            <Button mode={\"secondary\"}>Статистика</Button>\r\n                        </React.Fragment>}\r\n                    >\r\n                        {el.name}\r\n                    </RichCell>\r\n                ))}\r\n            </Group>\r\n\r\n            {!groups.length && !after && !isLoading &&\r\n            <Placeholder\r\n                icon={<Icon56InfoOutline/>}\r\n                header={\"Больше групп по заданным критериям не найдены\"}\r\n            />}\r\n\r\n            {(before || after) && <Div className={\"flex\"}>\r\n                <Button mode={\"secondary\"} disabled={!before || isLoading}\r\n                        onClick={() => dispatch(fetchGroups(\"backward\"))} stretched><Icon16ChevronLeft/></Button>\r\n                <Button mode={\"secondary\"} className={\"ml-2\"} disabled={!after || isLoading}\r\n                        onClick={() => dispatch(fetchGroups(\"forward\"))} stretched><Icon16Chevron/></Button>\r\n            </Div>}\r\n\r\n            <Div>\r\n                <Title level={\"3\"} weight={\"bold\"}>Выбрано групп на {selectedPrice} ₽</Title>\r\n            </Div>\r\n\r\n            <Div><Button size={\"l\"} stretched>\r\n                Продолжить\r\n            </Button></Div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateAd;","C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\db.ts",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\modals\\index.tsx",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\redux\\index.ts",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\redux\\selectGroupsSlice.ts",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\redux\\getGroups.ts",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\modals\\Filters.tsx",[],"C:\\Users\\Mx\\WebstormProjects\\ad-hero\\src\\modals\\Sort.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":63,"column":8,"nodeType":"80","endLine":63,"endColumn":10,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":26,"column":8,"nodeType":"80","endLine":26,"endColumn":10,"suggestions":"83"},{"ruleId":"78","severity":1,"message":"82","line":32,"column":8,"nodeType":"80","endLine":32,"endColumn":50,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'go'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["88"],["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [go]",{"range":"96","text":"97"},"Update the dependencies array to be: [dispatch]",{"range":"98","text":"99"},"Update the dependencies array to be: [selectedGroups, groups, isLoading, after, dispatch]",{"range":"100","text":"101"},[1779,1781],"[go]",[1272,1274],"[dispatch]",[1406,1448],"[selectedGroups, groups, isLoading, after, dispatch]"]